# file opened: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\main.asm
  1   0000                  DEVICE ZXSPECTRUM48 ;Especificacion para el emulador           ;
  2   0000                  ORG $8000 ;Programa empieza en $8000                           ;
  3   8000 31 00 00         LD SP, 0 ;Carga del stack en 0                                 ;
  4   8003              ;-------------------------------------------------------------------
  5   8003              gameStart:
  6   8003 CD 9B 82         CALL STARTSCREEN ;Se llama a la pantalla de inicio
  7   8006              gameInit:
  8   8006 CD 3F 80         CALL MAINGAME ;Se llama al juego
  9   8009              gameEnd:
 10   8009 CD 0E 80         CALL ENDSCREEN ;Se llama a la pantalla final
 11   800C
 12   800C 18 FE        mainEnd: JR mainEnd ;Se queda en un bucle infinito
 13   800E              ;-------------------------------------------------------------------
 14   800E                  INCLUDE pantalla-final.asm
# file opened: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\pantalla-final.asm
  1+  800E              ENDSCREEN:
  2+  800E CD AF 83         CALL CLEARSCR
  3+  8011              ;--------------------------------------------------
  4+  8011              ;Imprime el GAME OVER
  5+  8011 3E 82            LD A,2+$80 ; Se da formato de color al texto
  6+  8013 06 0A            LD B,10    ; Coordenada de la fila
  7+  8015 0E 0C            LD C,12     ; Coordenada de la columna
  8+  8017 DD 21 1F 80      LD IX, GameOverText   ; Se añade el título
  9+  801B CD 3E 83         CALL PRINTAT
 10+  801E C9               RET
 11+  801F
 12+  801F
 13+  801F
 14+  801F
 15+  801F              ;---------------------------------------------------------
 16+  801F 47 41 4D 45  GameOverText: db "GAME OVER", 0 ; Texto de fin de partida
 16+  8023 20 4F 56 45
 16+  8027 52 00
 17+  8029 44 65 73 65  ContinueText: db "Desea jugar de nuevo?", 0 ; Pregunta continue
 17+  802D 61 20 6A 75
 17+  8031 67 61 72 20
 17+  8035 64 65 20 6E
 17+  8039 75 65 76 6F
 17+  803D 3F 00
# file closed: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\pantalla-final.asm
 15   803F                  INCLUDE game.asm
# file opened: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\game.asm
  1+  803F              MAINGAME:                                 ;
  2+  803F CD AF 83         CALL CLEARSCR  ;Limpia la pantalla    ;
  3+  8042              ;------------------------------------------
  4+  8042 CD 57 80         CALL CREATEBOARD ; Crea el tablero
  5+  8045              gameflow:
  6+  8045 CD A7 81         CALL RANDOMTETRO ; Geneta un tetromino aleatorio
  7+  8048 3E 0E            LD A, 14
  8+  804A 32 E0 81         LD (Middle), A
  9+  804D CD FD 80         CALL TETRODOWN ; Llama a la funcion que dibuja y mueve el tetromino hacia abajo
 10+  8050 FE FE            CP 254 ;Comprueba el gaemover
 11+  8052 20 F1            JR NZ, gameflow ;Si no es gameover, sigue el juego
 12+  8054 C9               RET ; Si es gameover, sale del juego
 13+  8055
 14+  8055 18 FE        fin: JR fin
 15+  8057              ;-----------------------------------------
 16+  8057                  INCLUDE create-board.asm
# file opened: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\create-board.asm
  1++ 8057              CREATEBOARD:                                 ;
  2++ 8057 CD AF 83         CALL CLEARSCR                         ;
  3++ 805A              ANCHO EQU 14                              ;
  4++ 805A              LARGO EQU 22                              ;
  5++ 805A              ;------------------------------------------
  6++ 805A CD C5 87         CALL Tetris_3D
  7++ 805D 3E 20            LD A, 32
  8++ 805F D6 02            SUB 2
  9++ 8061 D6 0E            SUB ANCHO
 10++ 8063 CB 3F            SRL A
 11++ 8065 4F               LD C, A
 12++ 8066 3E 00            LD A, 0
 13++ 8068 C6 1F            ADD (32 - 1)
 14++ 806A 47               LD B, A
 15++ 806B 21 00 58         LD HL, $5800
 16++ 806E              bucle1:
 17++ 806E 23               INC HL
 18++ 806F 10 FD            DJNZ bucle1
 19++ 8071 06 16            LD B, LARGO
 20++ 8073              bucle:
 21++ 8073 C5               PUSH BC
 22++ 8074 41               LD B, C
 23++ 8075              marco_izq:
 24++ 8075 23               INC HL
 25++ 8076 10 FD            DJNZ marco_izq
 26++ 8078 C5               PUSH BC
 27++ 8079              margenizq:
 28++ 8079 23               INC HL
 29++ 807A 0E 07            LD C, 7
 30++ 807C 79               LD A, C
 31++ 807D 87               ADD A
 32++ 807E 87               ADD A
 33++ 807F 87               ADD A
 34++ 8080 77               LD (HL), A
 35++ 8081 3E 00            LD A, 0
 36++ 8083 06 0E            LD B, ANCHO
 37++ 8085 80               ADD B
 38++ 8086 47               LD B, A
 39++ 8087              comienzo_ancho:
 40++ 8087 23               INC HL
 41++ 8088 10 FD            DJNZ comienzo_ancho
 42++ 808A              margendrcho:
 43++ 808A 23               INC HL
 44++ 808B 0E 07            LD C,7
 45++ 808D 79               LD A, C
 46++ 808E 87               ADD A
 47++ 808F 87               ADD A
 48++ 8090 87               ADD A
 49++ 8091 77               ld (HL), A
 50++ 8092
 51++ 8092 C1               POP BC
 52++ 8093 41               LD B, C
 53++ 8094              marco_drcho
 54++ 8094 23               INC HL
 55++ 8095 10 FD            DJNZ marco_drcho
 56++ 8097 C1               POP BC
 57++ 8098 10 D9            DJNZ bucle
 58++ 809A
 59++ 809A 41               LD B, C
 60++ 809B              marco_izq_fila_ult:
 61++ 809B 23               INC HL
 62++ 809C 10 FD            DJNZ marco_izq_fila_ult
 63++ 809E              fila_ultima:
 64++ 809E 06 10            LD B, ANCHO + 2
 65++ 80A0              bucle2:
 66++ 80A0 23               INC HL
 67++ 80A1 0E 07            LD C,7
 68++ 80A3 79               LD A, C
 69++ 80A4 87               ADD A
 70++ 80A5 87               ADD A
 71++ 80A6 87               ADD A
 72++ 80A7 77               ld (HL), A
 73++ 80A8 10 F6            DJNZ bucle2
 74++ 80AA
 75++ 80AA C9               RET
# file closed: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\create-board.asm
 17+  80AB                  INCLUDE draw-tetro.asm
# file opened: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\draw-tetro.asm
  1++ 80AB              DRAWTETRO:
  2++ 80AB              ;---------------------------------------------
  3++ 80AB DD 7E 00         LD A, (IX)
  4++ 80AE 57               LD D, A
  5++ 80AF DD 23            INC IX
  6++ 80B1 3A DE 81         LD A, (IXCounter)
  7++ 80B4 3C               INC A
  8++ 80B5 32 DE 81         LD (IXCounter), A
  9++ 80B8 DD 7E 00         LD A, (IX)
 10++ 80BB 5F               LD E, A
 11++ 80BC 42               LD B, D
 12++ 80BD              drawfilas:
 13++ 80BD C5               PUSH BC
 14++ 80BE 43               LD B, E
 15++ 80BF              drawcolumnas:
 16++ 80BF 50               LD D, B
 17++ 80C0 DD 23            INC IX
 18++ 80C2 3A DE 81         LD A, (IXCounter)
 19++ 80C5 3C               INC A
 20++ 80C6 32 DE 81         LD (IXCounter), A
 21++ 80C9 DD 7E 00         LD A, (IX)
 22++ 80CC C1               POP BC
 23++ 80CD 4A               LD C, D
 24++ 80CE CD D9 80         CALL DRAWPIXEL
 25++ 80D1 C5               PUSH BC
 26++ 80D2 42               LD B, D
 27++ 80D3 10 EA            DJNZ drawcolumnas
 28++ 80D5 C1               POP BC
 29++ 80D6 10 E5            DJNZ drawfilas
 30++ 80D8
 31++ 80D8 C9               RET
 32++ 80D9              ;------------------------------------------
 33++ 80D9                  INCLUDE draw-pixel.asm
# file opened: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\draw-pixel.asm
  1+++80D9              DRAWPIXEL:
  2+++80D9 F5               PUSH AF
  3+++80DA D5               PUSH DE
  4+++80DB F5               PUSH AF
  5+++80DC C5               PUSH BC
  6+++80DD              ;------------------------------------------------------
  7+++80DD 78               LD A, B
  8+++80DE FD 86 00         ADD (IY)
  9+++80E1 47               LD B, A
 10+++80E2 68               LD L, B
 11+++80E3 26 00            LD H, 0 ; HL = B
 12+++80E5
 13+++80E5 29               ADD HL, HL
 14+++80E6 29               ADD HL, HL
 15+++80E7 29               ADD HL, HL
 16+++80E8 29               ADD HL, HL
 17+++80E9 29               ADD HL, HL; HL = HL *32
 18+++80EA 3A E0 81         LD A, (Middle)
 19+++80ED 81               ADD C
 20+++80EE 4F               LD C, A
 21+++80EF 59               LD E, C
 22+++80F0 16 00            LD D, 0 ; DE = C
 23+++80F2 19               ADD HL, DE
 24+++80F3 11 00 58         LD DE, $5800
 25+++80F6 19               ADD HL, DE ; HL = Y*32 + X + $5800
 26+++80F7 C1               POP BC
 27+++80F8 F1               POP AF
 28+++80F9 77               LD (HL), A
 29+++80FA D1               POP DE
 30+++80FB F1               POP AF
 31+++80FC C9               RET
 32+++80FD              ;------------------------------------------------
# file closed: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\draw-pixel.asm
# file closed: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\draw-tetro.asm
 18+  80FD                  INCLUDE tetro-down.asm
# file opened: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\tetro-down.asm
  1++ 80FD              TETRODOWN:
  2++ 80FD              ;-----------------------------------------
  3++ 80FD FD 21 A6 87      LD IY, row_coords
  4++ 8101 CD E1 81         CALL CHECKCOLISION
  5++ 8104 FE 64            CP 100
  6++ 8106 28 3A            JR Z, goGameOver
  7++ 8108 CD 99 81         CALL LASTPOSITION
  8++ 810B
  9++ 810B              down:
 10++ 810B C5               PUSH BC
 11++ 810C CD AB 80         CALL DRAWTETRO
 12++ 810F CD 99 81         CALL LASTPOSITION
 13++ 8112 CD CD 81         CALL TETRODELAY
 14++ 8115 CD 47 81         CALL TETRODEL
 15++ 8118 CD 99 81         CALL LASTPOSITION
 16++ 811B CD 70 82         CALL TETROMOVE
 17++ 811E CD 42 82         CALL TURNTETRO
 18++ 8121 FD 23            INC IY
 19++ 8123 CD E1 81         CALL CHECKCOLISION
 20++ 8126 FE 64            CP 100
 21++ 8128 28 08            JR Z, nexttetro
 22++ 812A 20 00            JR NZ, downcontinue
 23++ 812C              downcontinue:
 24++ 812C CD 99 81         CALL LASTPOSITION
 25++ 812F C1               POP BC
 26++ 8130 18 D9            JR down
 27++ 8132              nexttetro:
 28++ 8132 CD 99 81         CALL LASTPOSITION
 29++ 8135 C1               POP BC
 30++ 8136 FD 2B            DEC IY
 31++ 8138 CD AB 80         CALL DRAWTETRO
 32++ 813B CD 99 81         CALL LASTPOSITION
 33++ 813E CD C1 81         CALL RETURNIY
 34++ 8141 C9               RET
 35++ 8142              goGameOver:
 36++ 8142 C1               POP BC
 37++ 8143 3E FE            LD A, 254
 38++ 8145 C9               RET
 39++ 8146              gamecontinue:
 40++ 8146 C9               RET
 41++ 8147              ;----------------------------------------------------
 42++ 8147                  INCLUDE del-tetro.asm
# file opened: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\del-tetro.asm
  1+++8147              TETRODEL:
  2+++8147              ;------------------------------------------------------
  3+++8147 DD 7E 00         LD A, (IX)
  4+++814A 57               LD D, A
  5+++814B DD 23            INC IX
  6+++814D 3A DE 81         LD A, (IXCounter)
  7+++8150 3C               INC A
  8+++8151 32 DE 81         LD (IXCounter), A
  9+++8154 DD 7E 00         LD A, (IX)
 10+++8157 5F               LD E, A
 11+++8158 42               LD B, D
 12+++8159              rowdel:
 13+++8159 C5               PUSH BC
 14+++815A 43               LD B, E
 15+++815B              columndel:
 16+++815B 50               LD D, B
 17+++815C DD 23            INC IX
 18+++815E 3A DE 81         LD A, (IXCounter)
 19+++8161 3C               INC A
 20+++8162 32 DE 81         LD (IXCounter), A
 21+++8165 3E 00            LD A, 0
 22+++8167 C1               POP BC
 23+++8168 4A               LD C, D
 24+++8169 CD 74 81         CALL DELPIXEL
 25+++816C C5               PUSH BC
 26+++816D 42               LD B, D
 27+++816E 10 EB            DJNZ columndel
 28+++8170 C1               POP BC
 29+++8171 10 E6            DJNZ rowdel
 30+++8173
 31+++8173 C9               RET
 32+++8174              ;-----------------------------------------
 33+++8174                  INCLUDE del-pixel.asm
# file opened: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\del-pixel.asm
  1+++8174              DELPIXEL:
  2+++8174              ;--------------------------------------------------
  3+++8174 F5               PUSH AF
  4+++8175 D5               PUSH DE
  5+++8176 F5               PUSH AF
  6+++8177 C5               PUSH BC
  7+++8178
  8+++8178 78               LD A, B
  9+++8179 FD 86 00         ADD (IY)
 10+++817C 47               LD B, A
 11+++817D 68               LD L, B
 12+++817E 26 00            LD H, 0 ; HL = B
 13+++8180
 14+++8180 29               ADD HL, HL
 15+++8181 29               ADD HL, HL
 16+++8182 29               ADD HL, HL
 17+++8183 29               ADD HL, HL
 18+++8184 29               ADD HL, HL; HL = HL *32
 19+++8185 3A E0 81         LD A, (Middle)
 20+++8188 81               ADD C
 21+++8189 4F               LD C, A
 22+++818A 59               LD E, C
 23+++818B 16 00            LD D, 0 ; DE = C
 24+++818D 19               ADD HL, DE
 25+++818E 11 00 58         LD DE, $5800
 26+++8191 19               ADD HL, DE ; HL = Y*32 + X + $5800
 27+++8192 C1               POP BC
 28+++8193 F1               POP AF
 29+++8194 36 00            LD (HL), 0
 30+++8196 D1               POP DE
 31+++8197 F1               POP AF
 32+++8198 C9               RET
# file closed: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\del-pixel.asm
# file closed: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\del-tetro.asm
 43++ 8199                  INCLUDE last-position.asm
# file opened: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\last-position.asm
  1+++8199              LASTPOSITION:
  2+++8199              ;---------------------------
  3+++8199 3A DE 81         LD A, (IXCounter)
  4+++819C 47               LD B, A
  5+++819D              return:
  6+++819D DD 2B            DEC IX
  7+++819F 10 FC            DJNZ return
  8+++81A1
  9+++81A1 3E 00            LD A, 0
 10+++81A3 32 DE 81         LD (IXCounter), A
 11+++81A6 C9               RET
# file closed: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\last-position.asm
 44++ 81A7                  INCLUDE tetro-random.asm
# file opened: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\tetro-random.asm
  1+++81A7              RANDOMTETRO:
  2+++81A7 ED 5F            LD A, R
  3+++81A9 E6 1F            AND 31
  4+++81AB FE 13            CP 19
  5+++81AD 38 02            JR C, continue
  6+++81AF D6 13            SUB 19
  7+++81B1              continue:
  8+++81B1 DD 21 C2 86      LD IX, T_O
  9+++81B5 11 0C 00         LD DE, ANCHOTETRO
 10+++81B8 B7               OR A
 11+++81B9 28 05            JR Z, randomend
 12+++81BB              more:
 13+++81BB DD 19            ADD IX, DE
 14+++81BD 3D               DEC A
 15+++81BE 20 FB            JR NZ, more
 16+++81C0
 17+++81C0              randomend:
 18+++81C0 C9               RET
 19+++81C1              ;-------------------------------
 20+++81C1              ANCHOTETRO EQU T_L1 - T_O
# file closed: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\tetro-random.asm
 45++ 81C1                  INCLUDE IYReturn.asm
# file opened: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\IYReturn.asm
  1+++81C1              RETURNIY:
  2+++81C1              ;----------------------------
  3+++81C1 FD 7E 00         LD A, (IY)
  4+++81C4 FE 00            CP 0
  5+++81C6 28 04            JR Z, final
  6+++81C8 FD 2B            DEC IY
  7+++81CA 18 F5            JR RETURNIY
  8+++81CC
  9+++81CC
 10+++81CC              final:
 11+++81CC C9               RET
# file closed: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\IYReturn.asm
 46++ 81CD                  INCLUDE delay-tetro.asm
# file opened: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\delay-tetro.asm
  1+++81CD              TETRODELAY:
  2+++81CD              ;------------------------------------------
  3+++81CD 21 DD DD         LD HL, $dddd
  4+++81D0              delayloop:
  5+++81D0 2B               DEC HL
  6+++81D1 7C               LD A, H
  7+++81D2 F6 00            OR 0
  8+++81D4 20 FA            JR NZ, delayloop
  9+++81D6 C9               RET
 10+++81D7
# file closed: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\delay-tetro.asm
# file closed: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\tetro-down.asm
 19+  81D7                  INCLUDE position-coords.asm
# file opened: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\position-coords.asm
  1++ 81D7              gamestatusstruct:
  2++ 81D7              ;--------------------
  3++ 81D7
  4++ 81D7 00           GameX: DB 0
  5++ 81D8 00           GameY: DB 0
  6++ 81D9 00 00        TetroPtr: DW 0
  7++ 81DB 00 00        DownCounter: DW 0
  8++ 81DD 00           UndoKey: DB 0
  9++ 81DE 00           IXCounter: DB 0
 10++ 81DF 00           PosibleColor: DB 0
 11++ 81E0 0E           Middle: DB 14
# file closed: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\position-coords.asm
 20+  81E1                  INCLUDE check-colision.asm
# file opened: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\check-colision.asm
  1++ 81E1              CHECKCOLISION:
  2++ 81E1              ;--------------------------------------------
  3++ 81E1 DD 7E 00         LD A, (IX)
  4++ 81E4 57               LD D, A
  5++ 81E5 DD 23            INC IX
  6++ 81E7 3A DE 81         LD A, (IXCounter)
  7++ 81EA 3C               INC A
  8++ 81EB 32 DE 81         LD (IXCounter), A
  9++ 81EE DD 7E 00         LD A, (IX)
 10++ 81F1 5F               LD E, A
 11++ 81F2 42               LD B, D
 12++ 81F3              fil:
 13++ 81F3 C5               PUSH BC
 14++ 81F4 43               LD B, E
 15++ 81F5              cols:
 16++ 81F5 50               LD D, B
 17++ 81F6 DD 23            INC IX
 18++ 81F8 3A DE 81         LD A, (IXCounter)
 19++ 81FB 3C               INC A
 20++ 81FC 32 DE 81         LD (IXCounter), A
 21++ 81FF DD 7E 00         LD A, (IX)
 22++ 8202 32 DF 81         LD (PosibleColor), A
 23++ 8205 C1               POP BC
 24++ 8206 4A               LD C, D
 25++ 8207 CD 20 82         CALL comprobarpunto
 26++ 820A FE 00            CP 0
 27++ 820C 28 0A            JR Z, no_hay_color
 28++ 820E              puede_haber_color:
 29++ 820E 3A DF 81         LD A, (PosibleColor)
 30++ 8211 FE 00            CP 0
 31++ 8213 28 03            JR Z, no_hay_color
 32++ 8215              hay_color:
 33++ 8215 3E 64            LD A, 100
 34++ 8217 C9               RET
 35++ 8218              no_hay_color:
 36++ 8218 C5               PUSH BC
 37++ 8219 42               LD B, D
 38++ 821A 10 D9            DJNZ cols
 39++ 821C C1               POP BC
 40++ 821D 10 D4            DJNZ fil
 41++ 821F
 42++ 821F C9               RET
 43++ 8220              ;----------------------------------------
 44++ 8220                  INCLUDE check-pixel.asm
# file opened: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\check-pixel.asm
  1+++8220              comprobarpunto:
  2+++8220              ;-------------------------------------------------------
  3+++8220 D5               PUSH DE
  4+++8221 F5               PUSH AF
  5+++8222 C5               PUSH BC
  6+++8223
  7+++8223 68               LD L, B
  8+++8224 FD 7E 00         LD A, (IY)
  9+++8227 85               ADD L
 10+++8228 6F               LD L, A
 11+++8229 26 00            LD H, 0 ; HL = B
 12+++822B 29               ADD HL, HL
 13+++822C 29               ADD HL, HL
 14+++822D 29               ADD HL, HL
 15+++822E 29               ADD HL, HL
 16+++822F 29               ADD HL, HL; HL = HL *32
 17+++8230 3A E0 81         LD A, (Middle)
 18+++8233 81               ADD C
 19+++8234 4F               LD C, A
 20+++8235 59               LD E, C
 21+++8236 16 00            LD D, 0 ; DE = C
 22+++8238 19               ADD HL, DE
 23+++8239 11 00 58         LD DE, $5800
 24+++823C 19               ADD HL, DE ; HL = Y*32 + X + $5800
 25+++823D C1               POP BC
 26+++823E F1               POP AF
 27+++823F D1               POP DE
 28+++8240 7E               LD A, (HL)
 29+++8241 C9               RET
# file closed: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\check-pixel.asm
# file closed: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\check-colision.asm
 21+  8242                  INCLUDE turn-tetro.asm
# file opened: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\turn-tetro.asm
  1++ 8242              TURNTETRO:
  2++ 8242              ;--------------------------------------------------------------------
  3++ 8242
  4++ 8242 01 FE FB         LD BC,$FBFE        ; Escanear línea  T,R,E,W,Q
  5++ 8245 ED 78            IN A,(C)
  6++ 8247 CB 47            BIT 0,A
  7++ 8249 28 11            JR Z, turn_left    ; Han pulsado Q -> Girar izquierda
  8++ 824B CB 4F            BIT 1,A
  9++ 824D 28 02            JR Z, turn_right  ; Han pulsado W -> Girar derecha
 10++ 824F 18 1E            JR no_tecla         ; No hay tecla pulsada
 11++ 8251
 12++ 8251              turn_right:
 13++ 8251 DD 6E 0A         LD L, (IX + 10)
 14++ 8254 DD 66 0B         LD H, (IX + 11)
 15++ 8257 E5 DD E1         LD IX, HL
 16++ 825A 18 0C            JR SoltarTecla     ; Esperar q que suelten la tecla
 17++ 825C
 18++ 825C              turn_left:
 19++ 825C DD 6E 08         LD L, (IX + 8)
 20++ 825F DD 66 09         LD H, (IX + 9)
 21++ 8262 E5 DD E1         LD IX, HL
 22++ 8265 18 01            JR SoltarTecla     ; Esperar q que suelten la tecla
 23++ 8267 C9               RET
 24++ 8268
 25++ 8268
 26++ 8268              SoltarTecla:           ; Rutina de espera hasta que se suelta la tecla
 27++ 8268 ED 78            IN A,(C)            ; Leer del puerto que se ha definido en Lee_Tecla
 28++ 826A FE FF            CP $FF              ; Comprobar que no hay tecla pulsada
 29++ 826C 20 FA            JR NZ,SoltarTecla  ; esperar hasta que no haya tecla pulsada
 30++ 826E C9               RET
 31++ 826F
 32++ 826F              no_tecla:
 33++ 826F C9               RET
 34++ 8270
# file closed: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\turn-tetro.asm
 22+  8270                  INCLUDE tetro-move.asm
# file opened: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\tetro-move.asm
  1++ 8270              TETROMOVE:
  2++ 8270              ;----------------------------------------
  3++ 8270
  4++ 8270 01 FE BF         LD BC,$BFFE       ; Escanear línea  H,J,K,L,ENTER
  5++ 8273 ED 78            IN A,(C)
  6++ 8275 CB 5F            BIT 3,A
  7++ 8277 28 10            JR Z, move_left    ; Han pulsado J -> Mover izquierda
  8++ 8279 CB 57            BIT 2,A
  9++ 827B 28 02            JR Z, move_right  ; Han pulsado K -> Mover derecha
 10++ 827D 18 1B            JR no_tecla_move     ; No hay tecla pulsada
 11++ 827F
 12++ 827F              move_right:
 13++ 827F 3A E0 81         LD A, (Middle)
 14++ 8282 3C               INC A
 15++ 8283 32 E0 81         LD (Middle), A
 16++ 8286 18 0B            JR SoltarTeclaMv     ; Esperar q que suelten la tecla
 17++ 8288 C9               RET
 18++ 8289
 19++ 8289              move_left:
 20++ 8289 3A E0 81         LD A, (Middle)
 21++ 828C 3D               DEC A
 22++ 828D 32 E0 81         LD (Middle), A
 23++ 8290 18 01            JR SoltarTeclaMv     ; Esperar q que suelten la tecla
 24++ 8292 C9               RET
 25++ 8293
 26++ 8293
 27++ 8293              SoltarTeclaMv:           ; Rutina de espera hasta que se suelta la tecla
 28++ 8293 ED 78            IN A,(C)            ; Leer del puerto que se ha definido en Lee_Tecla
 29++ 8295 FE FF            CP $FF              ; Comprobar que no hay tecla pulsada
 30++ 8297 20 FA            JR NZ,SoltarTeclaMv  ; esperar hasta que no haya tecla pulsada
 31++ 8299 C9               RET
 32++ 829A
 33++ 829A              no_tecla_move:
 34++ 829A C9               RET
# file closed: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\tetro-move.asm
 23+  829B
# file closed: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\game.asm
 16   829B                  INCLUDE pantalla-inicio.asm
# file opened: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\pantalla-inicio.asm
  1+  829B
  2+  829B              STARTSCREEN:                                   ;
  3+  829B CD AF 83         CALL CLEARSCR                              ;
  4+  829E CD A1 82         CALL startInit                             ;
  5+  82A1              ;-----------------------------------------------
  6+  82A1              startInit:
  7+  82A1              ;Imprimir título
  8+  82A1 3E 83            LD A,3+$80 ; Se da formato de color al texto
  9+  82A3 06 03            LD B,3     ; Coordenada de la fila
 10+  82A5 0E 08            LD C,8     ; Coordenada de la columna
 11+  82A7 DD 21 00 83      LD IX,StartTitle    ; Se añade el título
 12+  82AB CD 3E 83         CALL PRINTAT    ; Se llama a la rutina que imprime el título
 13+  82AE
 14+  82AE              ;Imprimir pregunta
 15+  82AE
 16+  82AE 3E 04            LD A,4  ; Se da formato de color al texto
 17+  82B0 06 0E            LD B,14 ; Coordenada de la fila
 18+  82B2 0E 02            LD C,2  ; Coordenada de la columna
 19+  82B4 DD 21 12 83      LD IX,StartQuestion ; Se añade la pregunta
 20+  82B8 CD 3E 83         CALL PRINTAT ; Se llama a la rutina para imprimir la pregunta
 21+  82BB
 22+  82BB 06 0E            LD B,14 ; Se pone el cursor en las coordenadas 14(fila)
 23+  82BD 0E 1C            LD C,28 ; y 28(Columna)
 24+  82BF CD C8 82         CALL Coor_Atrib ; Llamamos a la rutina encargada de devolver la dirección del atributo
 25+  82C2 3E 84            LD A,4+$80  ; Se le da el formato
 26+  82C4 77               LD (HL),A   ; Se imprime el cursor
 27+  82C5
 28+  82C5 CD E3 82         CALL TecladoInicio    ; Se lee el input del teclado hasta que se pulse S o N
 29+  82C8
 30+  82C8
 31+  82C8              ;Función para guardar coordenadas
 32+  82C8              Coor_Atrib:
 33+  82C8 F5               PUSH AF ; Se guarda el registro AF en el stack
 34+  82C9 60               LD H,b  ; Los bits 4,5 de B deben ser los bits 0,1 de H
 35+  82CA CB 3C            SRL H
 35+  82CC CB 3C          SRL H
 35+  82CE CB 3C          SRL H
 36+  82D0 78               LD A,B  ; Los bits 0,1,2 de B deben ser los bits 5,6,7 de L
 37+  82D1 CB 27            SLA A
 37+  82D3 CB 27          SLA A
 37+  82D5 CB 27          SLA A
 37+  82D7 CB 27          SLA A
 37+  82D9 CB 27          SLA a
 38+  82DB B1               OR c  ; Y C son los bits 0-4 de L
 39+  82DC 6F               LD L,A
 40+  82DD 01 00 58         LD BC, $5800
 41+  82E0 09               ADD HL,BC ; Se le suma la dirección de memoria del comienzo de los atributos
 42+  82E1 F1               POP AF ; Se devuelve el registro AF del stack
 43+  82E2 C9               RET
 44+  82E3
 45+  82E3              ;Rutina que guarda lo que pulsa el usuario
 46+  82E3              TecladoInicio:          ; Rutina para leer del teclado 'S' o 'N'
 47+  82E3 01 FE 7F         LD BC,$7FFE         ; Escanear línea B,N,M,SYMB,Space
 48+  82E6 ED 78            IN A,(C)
 49+  82E8 CB 5F            BIT 3,A
 50+  82EA 28 0C            JR Z,T_N            ; Han pulsado N
 51+  82EC 01 FE FD         LD BC,$FDFE         ; Escanear línea G,F,D,S,A
 52+  82EF ED 78            IN A,(C)
 53+  82F1 CB 4F            BIT 1,A
 54+  82F3 20 EE            JR NZ,TecladoInicio       ; No han pulsado 'S'
 55+  82F5
 56+  82F5              T_S:
 57+  82F5 18 02            JR Soltar_Tecla     ; Esperar q que suelten la tecla
 58+  82F7 C9               RET
 59+  82F8
 60+  82F8              T_N:
 61+  82F8 C9               RET
 62+  82F9
 63+  82F9              Soltar_Tecla:           ; Rutina de espera hasta que se suelta la tecla
 64+  82F9 ED 78            IN A,(C)            ; Leer del puerto que se ha definido en Lee_Tecla
 65+  82FB FE FF            CP $FF              ; Comprobar que no hay tecla pulsada
 66+  82FD 20 FA            JR NZ,Soltar_Tecla  ; esperar hasta que no haya tecla pulsada
 67+  82FF C9               RET
 68+  8300
 69+  8300              ;----------------------------------------------------------------------------
 70+  8300              ; Carga de ficheros y "variables"
 71+  8300 57 45 4C 43  StartTitle: db "WELCOME TO TETRIS", 0 ;Título del tetris
 71+  8304 4F 4D 45 20
 71+  8308 54 4F 20 54
 71+  830C 45 54 52 49
 71+  8310 53 00
 72+  8312 49 6E 69 63  StartQuestion: db "Iniciar una partida? (S/N)", 0 ;Pregunta Inicio
 72+  8316 69 61 72 20
 72+  831A 75 6E 61 20
 72+  831E 70 61 72 74
 72+  8322 69 64 61 3F
 72+  8326 20 28 53 2F
 72+  832A 4E 29 00
 73+  832D 48 61 73 20  Respuesta: db "Has contestado: ",0  ; Mensaje con la respuesta
 73+  8331 63 6F 6E 74
 73+  8335 65 73 74 61
 73+  8339 64 6F 3A 20
 73+  833D 00
 74+  833E
 75+  833E
# file closed: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\pantalla-inicio.asm
 17   833E                  INCLUDE printat.asm ;Se "importa" la rutina printat
# file opened: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\printat.asm
  1+  833E              ; -------------------------------
  2+  833E              ; ZX Spectrum Text print library
  3+  833E              ; Daniel León - AOC - UFV 2020
  4+  833E              ; -------------------------------
  5+  833E
  6+  833E
  7+  833E              ; ----------------------------------------------------------------------------------------
  8+  833E              ; PRINTAT - Print a string in a position and attributes as per registers:
  9+  833E              ;		IN	A	: Bit 7=1 For Flash / Bit 6=1 For Brigh / Bit 5,4,3 for Paper / Bit 2,1,0 for Ink
 10+  833E              ;		IN	B	: Row 0..23
 11+  833E              ;		IN	C	: Column 0..31
 12+  833E              ;		IN	IX	: Address of text (Text must end in a 0)
 13+  833E              ; ----------------------------------------------------------------------------------------
 14+  833E CD 4D 83     PRINTAT:	CALL PREP_PRT				; Update Attribute var &Screen & Attributes pointers
 15+  8341              ; ----------------------------------------------------------------------------------------
 16+  8341              ;		VVV Do not move PRINTSTR below as PRINTAT continues into PRINTSTR routine
 17+  8341              ; ----------------------------------------------------------------------------------------
 18+  8341              ; PRINTSTR - Prints String - IX Points to the String start
 19+  8341              ; ----------------------------------------------------------------------------------------
 20+  8341 DD 7E 00     PRINTSTR:   LD A,(IX)					; A Contains first char to print
 21+  8344 B7           			OR A						; check for end of string (0)
 22+  8345 C8           			RET Z						; Finish printing if 0
 23+  8346 CD 7B 83     			CALL PRINTCHNUM
 24+  8349 DD 23        			INC IX						; Move to next char in string
 25+  834B 18 F4        			JR PRINTSTR					; Start over printing sequence
 26+  834D              ; ----------------------------------------------------------------------------------------
 27+  834D
 28+  834D
 29+  834D              ;-----------------------------------------------------------------------------------------
 30+  834D              ; PREP_PRT - Updates Print_Attr, SCR & ATTR Vars
 31+  834D              ;-----------------------------------------------------------------------------------------
 32+  834D 32 C1 83     PREP_PRT:	LD (PRINT_ATTR),A			; Set Attribute
 33+  8350 CD 56 83     PREP_PRT_2:	CALL CRtoSCREEN
 34+  8353 C3 68 83     			JP CRtoATTR
 35+  8356              ;-----------------------------------------------------------------------------------------
 36+  8356
 37+  8356              ;-----------------------------------------------------------------------------------------
 38+  8356              ; CRtoSCREEN - Converts a scr char coord into a SCREEN Address   b,c = y,x positions
 39+  8356              ;	IN  - B=Row, C=Column
 40+  8356              ;	OUT - HL=Address in screen also stored in (SCR_CUR_PTR)
 41+  8356              ;	Conversion:
 42+  8356              ;			Row FFfff   Column CCCCC
 43+  8356              ;			HL=%010FF000 fffCCCCC
 44+  8356              ;-----------------------------------------------------------------------------------------
 45+  8356              CRtoSCREEN:
 46+  8356 78           			LD A,B						; %___FFfff
 47+  8357 F6 40        			OR #40						; %010FFfff
 48+  8359 E6 F8        			AND #F8						; %010FF000
 49+  835B 67           			LD H,A
 50+  835C
 51+  835C 78           			LD A,B						; %___FFfff
 52+  835D E6 07        			AND #7						; %00000fff
 53+  835F 0F           			RRCA						; %f00000ff
 54+  8360 0F           			RRCA						; %ff00000f
 55+  8361 0F           			RRCA						; %fff00000
 56+  8362 B1           			OR C						; %fffCCCCC
 57+  8363 6F           			LD L,A
 58+  8364 22 BD 83                 LD (SCR_CUR_PTR),HL			; Update Variable
 59+  8367 C9                       RET
 60+  8368              ; ----------------------------------------------------------------------------------------
 61+  8368
 62+  8368
 63+  8368
 64+  8368              ;-----------------------------------------------------------------------------------------
 65+  8368              ; CRtoATTR - Converts a screen char coord  into a ATTR Address  b,c = y,x positions
 66+  8368              ;	IN  - B=Row, C=Column
 67+  8368              ;	OUT - HL=Address in screen also stored in (SCR_ATTR_PTR)
 68+  8368              ;	Conversion:
 69+  8368              ;			Row FFfff   Column CCCCC
 70+  8368              ;			HL=%010110FF fffCCCCC
 71+  8368              ;-----------------------------------------------------------------------------------------
 72+  8368              CRtoATTR:
 73+  8368 78           			LD A,B						; %___FFfff
 74+  8369 0F           			RRCA						; %f000FFff
 75+  836A 0F           			RRCA						; %ff000FFf
 76+  836B 0F           			RRCA						; %fff000FF
 77+  836C 6F           			LD L,A
 78+  836D E6 03        			AND 3						; %000000FF	value of FF can be only 00,01,10
 79+  836F F6 58        			OR #58						; %010110FF value will be #58, #59 or #5A
 80+  8371 67           			LD H,A
 81+  8372
 82+  8372 7D           			LD A,L						; %fff000FF
 83+  8373 E6 E0        			AND #E0						; %fff00000
 84+  8375 B1           			OR C						; %fffCCCCC
 85+  8376 6F           			LD L,A
 86+  8377
 87+  8377 22 BF 83                 LD (SCR_ATTR_PTR),HL		; Update Variable
 88+  837A C9                       RET
 89+  837B              ; ----------------------------------------------------------------------------------------
 90+  837B
 91+  837B
 92+  837B
 93+  837B              ; ----------------------------------------------------------------------------------------
 94+  837B              ; PRINTCHNUM - Prints Char Number N (stored in A)
 95+  837B              ;-----------------------------------------------------------------------------------------
 96+  837B              PRINTCHNUM:	;SUB 32						; Adjust Ascii to charset
 97+  837B 26 00        			LD H,0						; Multiply value by 8 to get to right Char in Charset
 98+  837D 6F           			LD L,A
 99+  837E 29           			ADD HL,HL
100+  837F 29           			ADD HL,HL
101+  8380 29           			ADD HL,HL
102+  8381 11 C2 82     			LD DE, CHARSET-(8*32)		; Optimize in compile time (instead of sub 32)
103+  8384 19           			ADD HL,DE
104+  8385 EB           			EX  DE,HL					;Value in DE
105+  8386              			; Continues to printchar below
106+  8386              ; ----------------------------------------------------------------------------------------
107+  8386
108+  8386
109+  8386              ; ----------------------------------------------------------------------------------------
110+  8386              ; PRINTCHAR - Prints Char  (DE points to the char. Uses HL as last Cur Pointer)
111+  8386              ; ----------------------------------------------------------------------------------------
112+  8386              PRINTCHAR:
113+  8386 06 08        			LD B,8						; 8 Lines per char
114+  8388 2A BD 83                 LD HL, (SCR_CUR_PTR)		; Load Cursor Pointer y,x
115+  838B
116+  838B 1A           BYTEPCHAR:	LD A,(DE)					; Get Char to be printed, first line
117+  838C 77           			LD (HL),A					; Move to Printing location
118+  838D 24                       INC H						; inc H so next line in char (ZX Spectrum Screen RAM)
119+  838E 13                       INC DE 						; next line to be printed
120+  838F 10 FA                    DJNZ BYTEPCHAR				; Repeat 8 lines
121+  8391 3A C1 83                 LD A,(PRINT_ATTR) 			; Load Attributes to print char with
122+  8394 2A BF 83                 LD HL, (SCR_ATTR_PTR)
123+  8397 77                       LD (HL),A
124+  8398 21 BF 83                 LD HL, SCR_ATTR_PTR			; Get pointer to ATTR
125+  839B 34                       INC (HL)					; Move Attribute cursor to next char
126+  839C 21 BD 83     			LD HL, SCR_CUR_PTR
127+  839F 34           			INC (HL)					; update Cursor pointer to next position
128+  83A0 C9                       RET
129+  83A1              ; ----------------------------------------------------------------------------------------
130+  83A1
131+  83A1
132+  83A1
133+  83A1              ; ----------------------------------------------------------------------------------------
134+  83A1              ; INK2PAPER - moves ink of attribute stored in (PRINT_ATTR) to paper and sets ink to 0
135+  83A1              ; 				Sets bright 1 and flash 0
136+  83A1              ; ----------------------------------------------------------------------------------------
137+  83A1 3A C1 83     INK2PAPER:	LD A, (PRINT_ATTR)		    ; Get storedAttribute
138+  83A4 E6 07                    AND 7						; get Attr INK in A
139+  83A6 07           			RLCA
140+  83A7 07           			RLCA
141+  83A8 07           			RLCA						; move Ink to Paper
142+  83A9 F6 40        			OR 64						; ink 0 bright 1
143+  83AB 32 C1 83     			LD (PRINT_ATTR),A		    ; Get storedAttribute
144+  83AE C9           			RET
145+  83AF              ; ----------------------------------------------------------------------------------------
146+  83AF
147+  83AF
148+  83AF
149+  83AF
150+  83AF 21 00 40     CLEARSCR:	LD HL,$4000					; Erases screen by writing 0 to all pixels and attributes
151+  83B2 11 01 40     			LD DE,$4001
152+  83B5 01 FF 1A     			LD BC,6911
153+  83B8 36 00        			LD (HL),0
154+  83BA ED B0        			LDIR
155+  83BC C9           			RET
156+  83BD
157+  83BD
158+  83BD              SCR_CUR_PTR
158+  83BD 00 00          	db $00, $00				; Cursor Pointer in Screen (2 bytes) (HL)
159+  83BF 00 00        SCR_ATTR_PTR: 	db $00, $00				; Attr Pointer in Screen (2 bytes) (HL)
160+  83C1 00           PRINT_ATTR:		db $00					; Attribute used by printchar routine (1 byte)
161+  83C2
162+  83C2              CHARSET: incbin "charset.bin"			; Charset used
163+  86C2
# file closed: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\printat.asm
 18   86C2                  INCLUDE fichas.asm
# file opened: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\fichas.asm
  1+  86C2              TETROMINOS:                            ;
  2+  86C2              ;---------------------------------------
  3+  86C2              ;Tetromino O
  4+  86C2 02 02 30 30  T_O: DB 2, 2, 6*8, 6*8, 6*8, 6*8, 0, 0
  4+  86C6 30 30 00 00
  4+  86CA C2 86 C2 86    DW T_O, T_O
  5+  86CE              ;Tetromino L
  6+  86CE 03 02 20 00  T_L1: DB 3, 2, 4*8, 0, 4*8, 0, 4*8, 4*8
  6+  86D2 20 00 20 20
  6+  86D6 DA 86 E6 86    DW T_L2, T_L3
  7+  86DA 02 03 00 00  T_L2: DB 2, 3, 0, 0, 4*8, 4*8, 4*8, 4*8
  7+  86DE 20 20 20 20
  7+  86E2 F2 86 CE 86    DW T_L4, T_L1
  8+  86E6 02 03 20 20  T_L3: DB 2, 3, 4*8, 4*8, 4*8, 0, 0, 4*8
  8+  86EA 20 00 00 20
  8+  86EE CE 86 F2 86    DW T_L1, T_L4
  9+  86F2 03 02 20 20  T_L4: DB 3, 2, 4*8, 4*8, 0, 4*8, 0, 4*8
  9+  86F6 00 20 00 20
  9+  86FA E6 86 DA 86    DW T_L3, T_L2
 10+  86FE              ;Tetromino J
 11+  86FE 03 02 00 10  T_J1: DB 3, 2, 0, 2*8, 0, 2*8, 2*8, 2*8
 11+  8702 00 10 10 10
 11+  8706 0A 87 16 87    DW T_J2, T_J3
 12+  870A 02 03 10 10  T_J2: DB 2, 3, 2*8, 2*8, 2*8, 0, 0, 2*8
 12+  870E 10 00 00 10
 12+  8712 22 87 FE 86    DW T_J4, T_J1
 13+  8716 02 03 10 00  T_J3: DB 2, 3, 2*8, 0, 0, 2*8, 2*8, 2*8
 13+  871A 00 10 10 10
 13+  871E FE 86 22 87    DW T_J1, T_J4
 14+  8722 03 02 10 10  T_J4: DB 3, 2, 2*8, 2*8, 2*8, 0, 2*8, 0
 14+  8726 10 00 10 00
 14+  872A 0A 87 16 87    DW T_J2, T_J3
 15+  872E              ;Tetromino T
 16+  872E 02 03 28 28  T_T1: DB 2, 3, 5*8, 5*8, 5*8, 0, 5*8, 0
 16+  8732 28 00 28 00
 16+  8736 3A 87 46 87    DW T_T2, T_T3
 17+  873A 03 02 28 00  T_T2: DB 3, 2, 5*8, 0, 5*8, 5*8, 5*8, 0
 17+  873E 28 28 28 00
 17+  8742 52 87 2E 87    DW T_T4, T_T1
 18+  8746 03 02 00 28  T_T3: DB 3, 2, 0, 5*8, 5*8, 5*8, 0, 5*8
 18+  874A 28 28 00 28
 18+  874E 2E 87 52 87    DW T_T1, T_T4
 19+  8752 02 03 00 28  T_T4: DB 2, 3, 0, 5*8, 0, 5*8, 5*8, 5*8
 19+  8756 00 28 28 28
 19+  875A 46 87 3A 87    DW T_T3, T_T2
 20+  875E              ;Tetromino I
 21+  875E 04 01 30 30  T_I1: DB 4, 1, 6*8, 6*8, 6*8, 6*8, 0, 0
 21+  8762 30 30 00 00
 21+  8766 6A 87 6A 87    DW T_I2, T_I2
 22+  876A 01 04 30 30  T_I2: DB 1, 4, 6*8, 6*8, 6*8, 6*8, 0, 0
 22+  876E 30 30 00 00
 22+  8772 5E 87 5E 87    DW T_I1, T_I1
 23+  8776              ;Tetromino Z
 24+  8776 02 03 38 38  T_Z1: DB 2, 3, 7*8, 7*8, 0, 0, 7*8, 7*8
 24+  877A 00 00 38 38
 24+  877E 82 87 82 87    DW T_Z2, T_Z2
 25+  8782 03 02 00 38  T_Z2: DB 3, 2, 0, 7*8, 7*8, 7*8, 7*8, 0
 25+  8786 38 38 38 00
 25+  878A 76 87 76 87    DW T_Z1, T_Z1
 26+  878E              ;Tetromino S
 27+  878E 02 03 00 18  T_S1: DB 2, 3, 0, 3*8, 3*8, 3*8, 3*8, 0
 27+  8792 18 18 18 00
 27+  8796 9A 87 9A 87    DW T_S2, T_S2
 28+  879A 03 02 18 00  T_S2: DB 3, 2, 3*8, 0, 3*8, 3*8, 0, 3*8
 28+  879E 18 18 00 18
 28+  87A2 8E 87 9A 87    DW T_S1, T_S2
 29+  87A6
 30+  87A6 00 01 02 03  row_coords: DB 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22
 30+  87AA 04 05 06 07
 30+  87AE 08 09 0A 0B
 30+  87B2 0C 0D 0E 0F
 30+  87B6 10 11 12 13
 30+  87BA 14 15 16
# file closed: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\fichas.asm
 19   87BD                  INCLUDE Tetris_3D.asm
# file opened: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\Tetris_3D.asm
  1+  87BD FF 81 81 85  Tetro_3D:   DB $FF, $81, $81, $85, $85, $9D, $81, $FF ; Patrón para los bloques
  1+  87C1 85 9D 81 FF
  2+  87C5
  3+  87C5              Tetris_3D:
  4+  87C5 16 03            LD D,3              ; Los 3 bloques de píxeles
  5+  87C7 DD 21 00 40      LD IX,$4000         ; Dirección de comienzo de la VRAM
  6+  87CB
  7+  87CB              T3D3:
  8+  87CB
  9+  87CB FD 21 BD 87      LD IY,Tetro_3D      ; Primer byte del patrón
 10+  87CF
 11+  87CF 0E 08            LD C,8              ; 8 bytes del patrón
 12+  87D1              T3D2:
 13+  87D1 06 00            LD B,0              ; 256 bytes de cada línea del patrón
 14+  87D3 FD 7E 00         LD a,(IY)           ; Cargo el valor del patrón
 15+  87D6              T3D1:
 16+  87D6 DD 77 00         LD (IX),a           ; Cargo el patrón en la VideoRam
 17+  87D9 DD 23            INC IX              ; Siguientes 8 pixels
 18+  87DB 10 F9            DJNZ T3D1           ; Fin del bucle
 19+  87DD
 20+  87DD 0D               DEC C               ; Fin del 2º Bucle
 21+  87DE FD 23            inc IY              ; Siguiente byte del patrón
 22+  87E0 20 EF            JR NZ,T3D2
 23+  87E2
 24+  87E2 15               DEC D               ; Fin del 3º bucle
 25+  87E3 20 E6            JR NZ, T3D3
 26+  87E5
 27+  87E5 C9               RET
 28+  87E6
# file closed: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\Tetris_3D.asm
# file closed: C:\Users\Mario\Documents\Trabajos Uni\2\Arquitectura y Organizacion de computadores\Tetris\main.asm
