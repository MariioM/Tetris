# file opened: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\main.asm
  1   0000                  DEVICE ZXSPECTRUM48 ;Especificacion para el emulador           ;
  2   0000                  ORG $8000 ;Programa empieza en $8000                           ;
  3   8000 31 00 00         LD SP, 0 ;Carga del stack en 0                                 ;
  4   8003              ;-------------------------------------------------------------------
  5   8003              gameStart:
  6   8003 CD 03 82         CALL STARTSCREEN
  7   8006              gameInit:
  8   8006 CD 3F 80         CALL MAINGAME
  9   8009              gameEnd:
 10   8009 CD 0E 80         CALL ENDSCREEN
 11   800C
 12   800C 18 FE        mainEnd: JR mainEnd
 13   800E              ;-------------------------------------------------------------------
 14   800E                  INCLUDE pantalla-final.asm
# file opened: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\pantalla-final.asm
  1+  800E              ENDSCREEN:
  2+  800E CD 17 83         CALL CLEARSCR
  3+  8011              ;--------------------------------------------------
  4+  8011              ;Imprime el GAME OVER
  5+  8011 3E 82            LD A,2+$80 ; Se da formato de color al texto
  6+  8013 06 0A            LD B,10    ; Coordenada de la fila
  7+  8015 0E 0C            LD C,12     ; Coordenada de la columna
  8+  8017 DD 21 1F 80      LD IX, GameOverText   ; Se añade el título
  9+  801B CD A6 82         CALL PRINTAT
 10+  801E C9               RET
 11+  801F
 12+  801F
 13+  801F
 14+  801F
 15+  801F              ;---------------------------------------------------------
 16+  801F 47 41 4D 45  GameOverText: db "GAME OVER", 0 ; Texto de fin de partida
 16+  8023 20 4F 56 45
 16+  8027 52 00
 17+  8029 44 65 73 65  ContinueText: db "Desea jugar de nuevo?", 0 ; Pregunta continue
 17+  802D 61 20 6A 75
 17+  8031 67 61 72 20
 17+  8035 64 65 20 6E
 17+  8039 75 65 76 6F
 17+  803D 3F 00
# file closed: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\pantalla-final.asm
 15   803F                  INCLUDE game.asm
# file opened: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\game.asm
  1+  803F              MAINGAME:                                 ;
  2+  803F CD 17 83         CALL CLEARSCR                         ;                                        ;
  3+  8042              ;------------------------------------------
  4+  8042 CD 50 80         CALL CREATEBOARD
  5+  8045              gameflow:
  6+  8045 CD 7E 81         CALL RANDOMTETRO
  7+  8048 CD E4 80         CALL TETRODOWN
  8+  804B 18 F8            JR gameflow
  9+  804D C9               RET
 10+  804E
 11+  804E 18 FE        fin: JR fin
 12+  8050              ;-----------------------------------------
 13+  8050                  INCLUDE create-board.asm
# file opened: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\create-board.asm
  1++ 8050              CREATEBOARD:                                 ;
  2++ 8050 CD 17 83         CALL CLEARSCR                         ;
  3++ 8053              ANCHO EQU 14                              ;
  4++ 8053              LARGO EQU 22                              ;
  5++ 8053              ;------------------------------------------
  6++ 8053 CD 2E 87         CALL Tetris_3D
  7++ 8056 3E 20            LD A, 32
  8++ 8058 D6 02            SUB 2
  9++ 805A D6 0E            SUB ANCHO
 10++ 805C CB 3F            SRL A
 11++ 805E 4F               LD C, A
 12++ 805F 3E 00            LD A, 0
 13++ 8061 C6 1F            ADD (32 - 1)
 14++ 8063 47               LD B, A
 15++ 8064 21 00 58         LD HL, $5800
 16++ 8067              bucle1:
 17++ 8067 23               INC HL
 18++ 8068 10 FD            DJNZ bucle1
 19++ 806A 06 16            LD B, LARGO
 20++ 806C              bucle:
 21++ 806C C5               PUSH BC
 22++ 806D 41               LD B, C
 23++ 806E              marco_izq:
 24++ 806E 23               INC HL
 25++ 806F 10 FD            DJNZ marco_izq
 26++ 8071 C5               PUSH BC
 27++ 8072              margenizq:
 28++ 8072 23               INC HL
 29++ 8073 0E 07            LD C, 7
 30++ 8075 79               LD A, C
 31++ 8076 87               ADD A
 32++ 8077 87               ADD A
 33++ 8078 87               ADD A
 34++ 8079 77               LD (HL), A
 35++ 807A 3E 00            LD A, 0
 36++ 807C 06 0E            LD B, ANCHO
 37++ 807E 80               ADD B
 38++ 807F 47               LD B, A
 39++ 8080              comienzo_ancho:
 40++ 8080 23               INC HL
 41++ 8081 10 FD            DJNZ comienzo_ancho
 42++ 8083              margendrcho:
 43++ 8083 23               INC HL
 44++ 8084 0E 07            LD C,7
 45++ 8086 79               LD A, C
 46++ 8087 87               ADD A
 47++ 8088 87               ADD A
 48++ 8089 87               ADD A
 49++ 808A 77               ld (HL), A
 50++ 808B
 51++ 808B C1               POP BC
 52++ 808C 41               LD B, C
 53++ 808D              marco_drcho
 54++ 808D 23               INC HL
 55++ 808E 10 FD            DJNZ marco_drcho
 56++ 8090 C1               POP BC
 57++ 8091 10 D9            DJNZ bucle
 58++ 8093
 59++ 8093 41               LD B, C
 60++ 8094              marco_izq_fila_ult:
 61++ 8094 23               INC HL
 62++ 8095 10 FD            DJNZ marco_izq_fila_ult
 63++ 8097              fila_ultima:
 64++ 8097 06 10            LD B, ANCHO + 2
 65++ 8099              bucle2:
 66++ 8099 23               INC HL
 67++ 809A 0E 07            LD C,7
 68++ 809C 79               LD A, C
 69++ 809D 87               ADD A
 70++ 809E 87               ADD A
 71++ 809F 87               ADD A
 72++ 80A0 77               ld (HL), A
 73++ 80A1 10 F6            DJNZ bucle2
 74++ 80A3
 75++ 80A3 C9               RET
# file closed: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\create-board.asm
 14+  80A4                  INCLUDE draw-tetro.asm
# file opened: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\draw-tetro.asm
  1++ 80A4              DRAWTETRO:
  2++ 80A4              ;---------------------------------------------
  3++ 80A4 DD 7E 00         LD A, (IX)
  4++ 80A7 57               LD D, A
  5++ 80A8 DD 23            INC IX
  6++ 80AA DD 7E 00         LD A, (IX)
  7++ 80AD 5F               LD E, A
  8++ 80AE 42               LD B, D
  9++ 80AF              drawfilas:
 10++ 80AF C5               PUSH BC
 11++ 80B0 43               LD B, E
 12++ 80B1              drawcolumnas:
 13++ 80B1 50               LD D, B
 14++ 80B2 DD 23            INC IX
 15++ 80B4 DD 7E 00         LD A, (IX)
 16++ 80B7 C1               POP BC
 17++ 80B8 4A               LD C, D
 18++ 80B9 CD C4 80         CALL DRAWPIXEL
 19++ 80BC C5               PUSH BC
 20++ 80BD 42               LD B, D
 21++ 80BE 10 F1            DJNZ drawcolumnas
 22++ 80C0 C1               POP BC
 23++ 80C1 10 EC            DJNZ drawfilas
 24++ 80C3
 25++ 80C3 C9               RET
 26++ 80C4              ;------------------------------------------
 27++ 80C4                  INCLUDE draw-pixel.asm
# file opened: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\draw-pixel.asm
  1+++80C4              DRAWPIXEL:
  2+++80C4 F5               PUSH AF
  3+++80C5 D5               PUSH DE
  4+++80C6 F5               PUSH AF
  5+++80C7 C5               PUSH BC
  6+++80C8              ;------------------------------------------------------
  7+++80C8 78               LD A, B
  8+++80C9 47               LD B, A
  9+++80CA 68               LD L, B
 10+++80CB 26 00            LD H, 0 ; HL = B
 11+++80CD
 12+++80CD 29               ADD HL, HL
 13+++80CE 29               ADD HL, HL
 14+++80CF 29               ADD HL, HL
 15+++80D0 29               ADD HL, HL
 16+++80D1 29               ADD HL, HL; HL = HL *32
 17+++80D2 79               LD A, C
 18+++80D3 C6 0E            ADD 14
 19+++80D5 4F               LD C, A
 20+++80D6 59               LD E, C
 21+++80D7 16 00            LD D, 0 ; DE = C
 22+++80D9 19               ADD HL, DE
 23+++80DA 11 00 58         LD DE, $5800
 24+++80DD 19               ADD HL, DE ; HL = Y*32 + X + $5800
 25+++80DE C1               POP BC
 26+++80DF F1               POP AF
 27+++80E0 77               LD (HL), A
 28+++80E1 D1               POP DE
 29+++80E2 F1               POP AF
 30+++80E3 C9               RET
 31+++80E4              ;------------------------------------------------
# file closed: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\draw-pixel.asm
# file closed: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\draw-tetro.asm
 15+  80E4                  INCLUDE tetro-down.asm
# file opened: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\tetro-down.asm
  1++ 80E4              TETRODOWN:
  2++ 80E4              ;-----------------------------------------
  3++ 80E4 FD 21 0E 87      LD IY, row_coords
  4++ 80E8 CD A1 81         CALL CHECKCOLISION
  5++ 80EB CD 77 81         CALL LASTPOSITION
  6++ 80EE FE 64            CP 100
  7++ 80F0 28 42            JR Z, goGameOver
  8++ 80F2 3E 00            LD A, 0
  9++ 80F4 32 9F 81         LD (IXCounter), A
 10++ 80F7
 11++ 80F7              down:
 12++ 80F7 C5               PUSH BC
 13++ 80F8 CD A4 80         CALL DRAWTETRO
 14++ 80FB CD 77 81         CALL LASTPOSITION
 15++ 80FE CD 37 81         CALL TETRODEL
 16++ 8101 CD 77 81         CALL LASTPOSITION
 17++ 8104 FD 23            INC IY
 18++ 8106 CD A1 81         CALL CHECKCOLISION
 19++ 8109 FE 64            CP 100
 20++ 810B 28 0D            JR Z, nexttetro
 21++ 810D 3E 00            LD A, 0
 22++ 810F 32 9F 81         LD (IXCounter), A
 23++ 8112 20 00            JR NZ, downcontinue
 24++ 8114              downcontinue:
 25++ 8114 CD 77 81         CALL LASTPOSITION
 26++ 8117 C1               POP BC
 27++ 8118 18 DD            JR down
 28++ 811A              nexttetro:
 29++ 811A 3A 9F 81         LD A, (IXCounter)
 30++ 811D              devuelvoix:
 31++ 811D FE 00            CP 0
 32++ 811F 28 05            JR Z, correct
 33++ 8121 3D               DEC A
 34++ 8122 DD 2B            DEC IX
 35++ 8124 18 F7            JR devuelvoix
 36++ 8126              correct:
 37++ 8126 C1               POP BC
 38++ 8127 FD 2B            DEC IY
 39++ 8129
 40++ 8129 CD A4 80         CALL DRAWTETRO
C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\tetro-down.asm(41): error: Label not found: devolverIX
 41++ 812C CD 00 00         CALL devolverIX
C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\tetro-down.asm(42): error: Label not found: devuelvoIY
 42++ 812F CD 00 00         CALL devuelvoIY
C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\tetro-down.asm(43): error: Label not found: bajarpiezas
C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\tetro-down.asm(43): error: [JR] Target out of range (-33076)
 43++ 8132 18 00            JR bajarpiezas
 44++ 8134              goGameOver:
 45++ 8134 C1               POP BC
 46++ 8135 C9               RET
 47++ 8136
 48++ 8136              gamecontinue:
 49++ 8136 C9               RET
 50++ 8137              ;----------------------------------------------------
 51++ 8137                  INCLUDE del-tetro.asm
# file opened: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\del-tetro.asm
  1+++8137              TETRODEL:
  2+++8137              ;------------------------------------------------------
  3+++8137 DD 7E 00         LD A, (IX)
  4+++813A 57               LD D, A
  5+++813B DD 23            INC IX
  6+++813D DD 7E 00         LD A, (IX)
  7+++8140 5F               LD E, A
  8+++8141 42               LD B, D
  9+++8142              rowdel:
 10+++8142 C5               PUSH BC
 11+++8143 43               LD B, E
 12+++8144              columndel:
 13+++8144 50               LD D, B
 14+++8145 DD 23            INC IX
 15+++8147 3E 00            LD A, 0
 16+++8149 C1               POP BC
 17+++814A 4A               LD C, D
 18+++814B CD 56 81         CALL DELPIXEL
 19+++814E C5               PUSH BC
 20+++814F 42               LD B, D
 21+++8150 10 F2            DJNZ columndel
 22+++8152 C1               POP BC
 23+++8153 10 ED            DJNZ rowdel
 24+++8155
 25+++8155 C9               RET
 26+++8156              ;-----------------------------------------
 27+++8156                  INCLUDE del-pixel.asm
# file opened: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\del-pixel.asm
  1+++8156              DELPIXEL:
  2+++8156              ;--------------------------------------------------
  3+++8156 F5               PUSH AF
  4+++8157 D5               PUSH DE
  5+++8158 F5               PUSH AF
  6+++8159 C5               PUSH BC
  7+++815A
  8+++815A 78               LD A, B
  9+++815B 47               LD B, A
 10+++815C 68               LD L, B
 11+++815D 26 00            LD H, 0 ; HL = B
 12+++815F
 13+++815F 29               ADD HL, HL
 14+++8160 29               ADD HL, HL
 15+++8161 29               ADD HL, HL
 16+++8162 29               ADD HL, HL
 17+++8163 29               ADD HL, HL; HL = HL *32
 18+++8164 79               LD A, C
 19+++8165 C6 0E            ADD 14
 20+++8167 4F               LD C, A
 21+++8168 59               LD E, C
 22+++8169 16 00            LD D, 0 ; DE = C
 23+++816B 19               ADD HL, DE
 24+++816C 11 00 58         LD DE, $5800
 25+++816F 19               ADD HL, DE ; HL = Y*32 + X + $5800
 26+++8170 C1               POP BC
 27+++8171 F1               POP AF
 28+++8172 36 00            LD (HL), 0
 29+++8174 D1               POP DE
 30+++8175 F1               POP AF
 31+++8176 C9               RET
# file closed: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\del-pixel.asm
# file closed: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\del-tetro.asm
 52++ 8177                  INCLUDE last-position.asm
# file opened: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\last-position.asm
  1+++8177              LASTPOSITION:
  2+++8177              ;---------------------------
  3+++8177 06 07            LD B, 7
  4+++8179              return:
  5+++8179 DD 2B            DEC IX
  6+++817B 10 FC            DJNZ return
  7+++817D
  8+++817D C9               RET
# file closed: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\last-position.asm
 53++ 817E                  INCLUDE tetro-random.asm
# file opened: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\tetro-random.asm
  1+++817E              RANDOMTETRO:
  2+++817E ED 5F            LD A, R
  3+++8180 E6 1F            AND 31
  4+++8182 FE 13            CP 19
  5+++8184 38 02            JR C, continue
  6+++8186 D6 13            SUB 19
  7+++8188              continue:
  8+++8188 DD 21 2A 86      LD IX, T_O
  9+++818C 11 0C 00         LD DE, ANCHOTETRO
 10+++818F B7               OR A
 11+++8190 28 05            JR Z, randomend
 12+++8192              more:
 13+++8192 DD 19            ADD IX, DE
 14+++8194 3D               DEC A
 15+++8195 20 FB            JR NZ, more
 16+++8197
 17+++8197              randomend:
 18+++8197 C9               RET
 19+++8198              ;-------------------------------
 20+++8198              ANCHOTETRO EQU T_L1 - T_O
# file closed: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\tetro-random.asm
# file closed: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\tetro-down.asm
 16+  8198                  INCLUDE position-coords.asm
# file opened: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\position-coords.asm
  1++ 8198              gamestatusstruct:
  2++ 8198              ;--------------------
  3++ 8198
  4++ 8198 00           GameX: DB 0
  5++ 8199 00           GameY: DB 0
  6++ 819A 00 00        TetroPtr: DW 0
  7++ 819C 00 00        DownCounter: DW 0
  8++ 819E 00           UndoKey: DB 0
  9++ 819F 00           IXCounter: DB 0
 10++ 81A0 00           PosibleColor: DB 0
# file closed: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\position-coords.asm
 17+  81A1                  INCLUDE check-colision.asm
# file opened: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\check-colision.asm
  1++ 81A1              CHECKCOLISION:
  2++ 81A1              ;--------------------------------------------
  3++ 81A1 DD 7E 00         LD A, (IX)
  4++ 81A4 57               LD D, A
  5++ 81A5 DD 23            INC IX
  6++ 81A7 3A 9F 81         LD A, (IXCounter)
  7++ 81AA 3C               INC A
  8++ 81AB 32 9F 81         LD (IXCounter), A
  9++ 81AE DD 7E 00         LD A, (IX)
 10++ 81B1 5F               LD E, A
 11++ 81B2 42               LD B, D
 12++ 81B3              fil:
 13++ 81B3 C5               PUSH BC
 14++ 81B4 43               LD B, E
 15++ 81B5              cols:
 16++ 81B5 50               LD D, B
 17++ 81B6 DD 23            INC IX
 18++ 81B8 3A 9F 81         LD A, (IXCounter)
 19++ 81BB 3C               INC A
 20++ 81BC 32 9F 81         LD (IXCounter), A
 21++ 81BF DD 7E 00         LD A, (IX)
 22++ 81C2 32 A0 81         LD (PosibleColor), A
 23++ 81C5 C1               POP BC
 24++ 81C6 4A               LD C, D
 25++ 81C7 CD E0 81         CALL comprobarpunto
 26++ 81CA FE 00            CP 0
 27++ 81CC 28 0A            JR Z, no_hay_color
 28++ 81CE              puede_haber_color:
 29++ 81CE 3A A0 81         LD A, (PosibleColor)
 30++ 81D1 FE 00            CP 0
 31++ 81D3 28 03            JR Z, no_hay_color
 32++ 81D5              hay_color:
 33++ 81D5 3E 64            LD A, 100
 34++ 81D7 C9               RET
 35++ 81D8              no_hay_color:
 36++ 81D8 C5               PUSH BC
 37++ 81D9 42               LD B, D
 38++ 81DA 10 D9            DJNZ cols
 39++ 81DC C1               POP BC
 40++ 81DD 10 D4            DJNZ fil
 41++ 81DF
 42++ 81DF C9               RET
 43++ 81E0              ;----------------------------------------
 44++ 81E0                  INCLUDE check-pixel.asm
# file opened: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\check-pixel.asm
  1+++81E0              comprobarpunto:
  2+++81E0              ;-------------------------------------------------------
  3+++81E0 D5               PUSH DE
  4+++81E1 F5               PUSH AF
  5+++81E2 C5               PUSH BC
  6+++81E3
  7+++81E3 68               LD L, B
  8+++81E4 FD 7E 00         LD A, (IY)
  9+++81E7 85               ADD L
 10+++81E8 C6 05            ADD 5 ;El tope supeior empieza en la fila 5
 11+++81EA 6F               LD L, A
 12+++81EB 26 00            LD H, 0 ; HL = B
 13+++81ED 29               ADD HL, HL
 14+++81EE 29               ADD HL, HL
 15+++81EF 29               ADD HL, HL
 16+++81F0 29               ADD HL, HL
 17+++81F1 29               ADD HL, HL; HL = HL *32
 18+++81F2 79               LD A, C
 19+++81F3 C6 0D            ADD 13
 20+++81F5 4F               LD C, A
 21+++81F6 59               LD E, C
 22+++81F7 16 00            LD D, 0 ; DE = C
 23+++81F9 19               ADD HL, DE
 24+++81FA 11 00 58         LD DE, $5800
 25+++81FD 19               ADD HL, DE ; HL = Y*32 + X + $5800
 26+++81FE C1               POP BC
 27+++81FF F1               POP AF
 28+++8200 D1               POP DE
 29+++8201 7E               LD A, (HL)
 30+++8202 C9               RET
# file closed: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\check-pixel.asm
# file closed: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\check-colision.asm
# file closed: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\game.asm
 16   8203                  INCLUDE pantalla-inicio.asm
# file opened: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\pantalla-inicio.asm
  1+  8203
  2+  8203              STARTSCREEN:                                   ;
  3+  8203 CD 17 83         CALL CLEARSCR                              ;
  4+  8206 CD 09 82         CALL startInit                             ;
  5+  8209              ;-----------------------------------------------
  6+  8209              startInit:
  7+  8209              ;Imprimir título
  8+  8209 3E 83            LD A,3+$80 ; Se da formato de color al texto
  9+  820B 06 03            LD B,3     ; Coordenada de la fila
 10+  820D 0E 08            LD C,8     ; Coordenada de la columna
 11+  820F DD 21 68 82      LD IX,StartTitle    ; Se añade el título
 12+  8213 CD A6 82         CALL PRINTAT    ; Se llama a la rutina que imprime el título
 13+  8216
 14+  8216              ;Imprimir pregunta
 15+  8216
 16+  8216 3E 04            LD A,4  ; Se da formato de color al texto
 17+  8218 06 0E            LD B,14 ; Coordenada de la fila
 18+  821A 0E 02            LD C,2  ; Coordenada de la columna
 19+  821C DD 21 7A 82      LD IX,StartQuestion ; Se añade la pregunta
 20+  8220 CD A6 82         CALL PRINTAT ; Se llama a la rutina para imprimir la pregunta
 21+  8223
 22+  8223 06 0E            LD B,14 ; Se pone el cursor en las coordenadas 14(fila)
 23+  8225 0E 1C            LD C,28 ; y 28(Columna)
 24+  8227 CD 30 82         CALL Coor_Atrib ; Llamamos a la rutina encargada de devolver la dirección del atributo
 25+  822A 3E 84            LD A,4+$80  ; Se le da el formato
 26+  822C 77               LD (HL),A   ; Se imprime el cursor
 27+  822D
 28+  822D CD 4B 82         CALL TecladoInicio    ; Se lee el input del teclado hasta que se pulse S o N
 29+  8230
 30+  8230
 31+  8230              ;Función para guardar coordenadas
 32+  8230              Coor_Atrib:
 33+  8230 F5               PUSH AF ; Se guarda el registro AF en el stack
 34+  8231 60               LD H,b  ; Los bits 4,5 de B deben ser los bits 0,1 de H
 35+  8232 CB 3C            SRL H
 35+  8234 CB 3C          SRL H
 35+  8236 CB 3C          SRL H
 36+  8238 78               LD A,B  ; Los bits 0,1,2 de B deben ser los bits 5,6,7 de L
 37+  8239 CB 27            SLA A
 37+  823B CB 27          SLA A
 37+  823D CB 27          SLA A
 37+  823F CB 27          SLA A
 37+  8241 CB 27          SLA a
 38+  8243 B1               OR c  ; Y C son los bits 0-4 de L
 39+  8244 6F               LD L,A
 40+  8245 01 00 58         LD BC, $5800
 41+  8248 09               ADD HL,BC ; Se le suma la dirección de memoria del comienzo de los atributos
 42+  8249 F1               POP AF ; Se devuelve el registro AF del stack
 43+  824A C9               RET
 44+  824B
 45+  824B              ;Rutina que guarda lo que pulsa el usuario
 46+  824B              TecladoInicio:          ; Rutina para leer del teclado 'S' o 'N'
 47+  824B 01 FE 7F         LD BC,$7FFE         ; Escanear línea B,N,M,SYMB,Space
 48+  824E ED 78            IN A,(C)
 49+  8250 CB 5F            BIT 3,A
 50+  8252 28 0C            JR Z,T_N            ; Han pulsado N
 51+  8254 01 FE FD         LD BC,$FDFE         ; Escanear línea G,F,D,S,A
 52+  8257 ED 78            IN A,(C)
 53+  8259 CB 4F            BIT 1,A
 54+  825B 20 EE            JR NZ,TecladoInicio       ; No han pulsado 'S'
 55+  825D
 56+  825D              T_S:
 57+  825D 18 02            JR Soltar_Tecla     ; Esperar q que suelten la tecla
 58+  825F C9               RET
 59+  8260
 60+  8260              T_N:
 61+  8260 C9               RET
 62+  8261
 63+  8261              Soltar_Tecla:           ; Rutina de espera hasta que se suelta la tecla
 64+  8261 ED 78            IN A,(C)            ; Leer del puerto que se ha definido en Lee_Tecla
 65+  8263 FE FF            CP $FF              ; Comprobar que no hay tecla pulsada
 66+  8265 20 FA            JR NZ,Soltar_Tecla  ; esperar hasta que no haya tecla pulsada
 67+  8267 C9               RET
 68+  8268
 69+  8268              ;----------------------------------------------------------------------------
 70+  8268              ; Carga de ficheros y "variables"
 71+  8268 57 45 4C 43  StartTitle: db "WELCOME TO TETRIS", 0 ;Título del tetris
 71+  826C 4F 4D 45 20
 71+  8270 54 4F 20 54
 71+  8274 45 54 52 49
 71+  8278 53 00
 72+  827A 49 6E 69 63  StartQuestion: db "Iniciar una partida? (S/N)", 0 ;Pregunta Inicio
 72+  827E 69 61 72 20
 72+  8282 75 6E 61 20
 72+  8286 70 61 72 74
 72+  828A 69 64 61 3F
 72+  828E 20 28 53 2F
 72+  8292 4E 29 00
 73+  8295 48 61 73 20  Respuesta: db "Has contestado: ",0  ; Mensaje con la respuesta
 73+  8299 63 6F 6E 74
 73+  829D 65 73 74 61
 73+  82A1 64 6F 3A 20
 73+  82A5 00
 74+  82A6
 75+  82A6
# file closed: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\pantalla-inicio.asm
 17   82A6                  INCLUDE printat.asm ;Se "importa" la rutina printat
# file opened: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\printat.asm
  1+  82A6              ; -------------------------------
  2+  82A6              ; ZX Spectrum Text print library
  3+  82A6              ; Daniel León - AOC - UFV 2020
  4+  82A6              ; -------------------------------
  5+  82A6
  6+  82A6
  7+  82A6              ; ----------------------------------------------------------------------------------------
  8+  82A6              ; PRINTAT - Print a string in a position and attributes as per registers:
  9+  82A6              ;		IN	A	: Bit 7=1 For Flash / Bit 6=1 For Brigh / Bit 5,4,3 for Paper / Bit 2,1,0 for Ink
 10+  82A6              ;		IN	B	: Row 0..23
 11+  82A6              ;		IN	C	: Column 0..31
 12+  82A6              ;		IN	IX	: Address of text (Text must end in a 0)
 13+  82A6              ; ----------------------------------------------------------------------------------------
 14+  82A6 CD B5 82     PRINTAT:	CALL PREP_PRT				; Update Attribute var &Screen & Attributes pointers
 15+  82A9              ; ----------------------------------------------------------------------------------------
 16+  82A9              ;		VVV Do not move PRINTSTR below as PRINTAT continues into PRINTSTR routine
 17+  82A9              ; ----------------------------------------------------------------------------------------
 18+  82A9              ; PRINTSTR - Prints String - IX Points to the String start
 19+  82A9              ; ----------------------------------------------------------------------------------------
 20+  82A9 DD 7E 00     PRINTSTR:   LD A,(IX)					; A Contains first char to print
 21+  82AC B7           			OR A						; check for end of string (0)
 22+  82AD C8           			RET Z						; Finish printing if 0
 23+  82AE CD E3 82     			CALL PRINTCHNUM
 24+  82B1 DD 23        			INC IX						; Move to next char in string
 25+  82B3 18 F4        			JR PRINTSTR					; Start over printing sequence
 26+  82B5              ; ----------------------------------------------------------------------------------------
 27+  82B5
 28+  82B5
 29+  82B5              ;-----------------------------------------------------------------------------------------
 30+  82B5              ; PREP_PRT - Updates Print_Attr, SCR & ATTR Vars
 31+  82B5              ;-----------------------------------------------------------------------------------------
 32+  82B5 32 29 83     PREP_PRT:	LD (PRINT_ATTR),A			; Set Attribute
 33+  82B8 CD BE 82     PREP_PRT_2:	CALL CRtoSCREEN
 34+  82BB C3 D0 82     			JP CRtoATTR
 35+  82BE              ;-----------------------------------------------------------------------------------------
 36+  82BE
 37+  82BE              ;-----------------------------------------------------------------------------------------
 38+  82BE              ; CRtoSCREEN - Converts a scr char coord into a SCREEN Address   b,c = y,x positions
 39+  82BE              ;	IN  - B=Row, C=Column
 40+  82BE              ;	OUT - HL=Address in screen also stored in (SCR_CUR_PTR)
 41+  82BE              ;	Conversion:
 42+  82BE              ;			Row FFfff   Column CCCCC
 43+  82BE              ;			HL=%010FF000 fffCCCCC
 44+  82BE              ;-----------------------------------------------------------------------------------------
 45+  82BE              CRtoSCREEN:
 46+  82BE 78           			LD A,B						; %___FFfff
 47+  82BF F6 40        			OR #40						; %010FFfff
 48+  82C1 E6 F8        			AND #F8						; %010FF000
 49+  82C3 67           			LD H,A
 50+  82C4
 51+  82C4 78           			LD A,B						; %___FFfff
 52+  82C5 E6 07        			AND #7						; %00000fff
 53+  82C7 0F           			RRCA						; %f00000ff
 54+  82C8 0F           			RRCA						; %ff00000f
 55+  82C9 0F           			RRCA						; %fff00000
 56+  82CA B1           			OR C						; %fffCCCCC
 57+  82CB 6F           			LD L,A
 58+  82CC 22 25 83                 LD (SCR_CUR_PTR),HL			; Update Variable
 59+  82CF C9                       RET
 60+  82D0              ; ----------------------------------------------------------------------------------------
 61+  82D0
 62+  82D0
 63+  82D0
 64+  82D0              ;-----------------------------------------------------------------------------------------
 65+  82D0              ; CRtoATTR - Converts a screen char coord  into a ATTR Address  b,c = y,x positions
 66+  82D0              ;	IN  - B=Row, C=Column
 67+  82D0              ;	OUT - HL=Address in screen also stored in (SCR_ATTR_PTR)
 68+  82D0              ;	Conversion:
 69+  82D0              ;			Row FFfff   Column CCCCC
 70+  82D0              ;			HL=%010110FF fffCCCCC
 71+  82D0              ;-----------------------------------------------------------------------------------------
 72+  82D0              CRtoATTR:
 73+  82D0 78           			LD A,B						; %___FFfff
 74+  82D1 0F           			RRCA						; %f000FFff
 75+  82D2 0F           			RRCA						; %ff000FFf
 76+  82D3 0F           			RRCA						; %fff000FF
 77+  82D4 6F           			LD L,A
 78+  82D5 E6 03        			AND 3						; %000000FF	value of FF can be only 00,01,10
 79+  82D7 F6 58        			OR #58						; %010110FF value will be #58, #59 or #5A
 80+  82D9 67           			LD H,A
 81+  82DA
 82+  82DA 7D           			LD A,L						; %fff000FF
 83+  82DB E6 E0        			AND #E0						; %fff00000
 84+  82DD B1           			OR C						; %fffCCCCC
 85+  82DE 6F           			LD L,A
 86+  82DF
 87+  82DF 22 27 83                 LD (SCR_ATTR_PTR),HL		; Update Variable
 88+  82E2 C9                       RET
 89+  82E3              ; ----------------------------------------------------------------------------------------
 90+  82E3
 91+  82E3
 92+  82E3
 93+  82E3              ; ----------------------------------------------------------------------------------------
 94+  82E3              ; PRINTCHNUM - Prints Char Number N (stored in A)
 95+  82E3              ;-----------------------------------------------------------------------------------------
 96+  82E3              PRINTCHNUM:	;SUB 32						; Adjust Ascii to charset
 97+  82E3 26 00        			LD H,0						; Multiply value by 8 to get to right Char in Charset
 98+  82E5 6F           			LD L,A
 99+  82E6 29           			ADD HL,HL
100+  82E7 29           			ADD HL,HL
101+  82E8 29           			ADD HL,HL
102+  82E9 11 2A 82     			LD DE, CHARSET-(8*32)		; Optimize in compile time (instead of sub 32)
103+  82EC 19           			ADD HL,DE
104+  82ED EB           			EX  DE,HL					;Value in DE
105+  82EE              			; Continues to printchar below
106+  82EE              ; ----------------------------------------------------------------------------------------
107+  82EE
108+  82EE
109+  82EE              ; ----------------------------------------------------------------------------------------
110+  82EE              ; PRINTCHAR - Prints Char  (DE points to the char. Uses HL as last Cur Pointer)
111+  82EE              ; ----------------------------------------------------------------------------------------
112+  82EE              PRINTCHAR:
113+  82EE 06 08        			LD B,8						; 8 Lines per char
114+  82F0 2A 25 83                 LD HL, (SCR_CUR_PTR)		; Load Cursor Pointer y,x
115+  82F3
116+  82F3 1A           BYTEPCHAR:	LD A,(DE)					; Get Char to be printed, first line
117+  82F4 77           			LD (HL),A					; Move to Printing location
118+  82F5 24                       INC H						; inc H so next line in char (ZX Spectrum Screen RAM)
119+  82F6 13                       INC DE 						; next line to be printed
120+  82F7 10 FA                    DJNZ BYTEPCHAR				; Repeat 8 lines
121+  82F9 3A 29 83                 LD A,(PRINT_ATTR) 			; Load Attributes to print char with
122+  82FC 2A 27 83                 LD HL, (SCR_ATTR_PTR)
123+  82FF 77                       LD (HL),A
124+  8300 21 27 83                 LD HL, SCR_ATTR_PTR			; Get pointer to ATTR
125+  8303 34                       INC (HL)					; Move Attribute cursor to next char
126+  8304 21 25 83     			LD HL, SCR_CUR_PTR
127+  8307 34           			INC (HL)					; update Cursor pointer to next position
128+  8308 C9                       RET
129+  8309              ; ----------------------------------------------------------------------------------------
130+  8309
131+  8309
132+  8309
133+  8309              ; ----------------------------------------------------------------------------------------
134+  8309              ; INK2PAPER - moves ink of attribute stored in (PRINT_ATTR) to paper and sets ink to 0
135+  8309              ; 				Sets bright 1 and flash 0
136+  8309              ; ----------------------------------------------------------------------------------------
137+  8309 3A 29 83     INK2PAPER:	LD A, (PRINT_ATTR)		    ; Get storedAttribute
138+  830C E6 07                    AND 7						; get Attr INK in A
139+  830E 07           			RLCA
140+  830F 07           			RLCA
141+  8310 07           			RLCA						; move Ink to Paper
142+  8311 F6 40        			OR 64						; ink 0 bright 1
143+  8313 32 29 83     			LD (PRINT_ATTR),A		    ; Get storedAttribute
144+  8316 C9           			RET
145+  8317              ; ----------------------------------------------------------------------------------------
146+  8317
147+  8317
148+  8317
149+  8317
150+  8317 21 00 40     CLEARSCR:	LD HL,$4000					; Erases screen by writing 0 to all pixels and attributes
151+  831A 11 01 40     			LD DE,$4001
152+  831D 01 FF 1A     			LD BC,6911
153+  8320 36 00        			LD (HL),0
154+  8322 ED B0        			LDIR
155+  8324 C9           			RET
156+  8325
157+  8325
158+  8325              SCR_CUR_PTR
158+  8325 00 00          	db $00, $00				; Cursor Pointer in Screen (2 bytes) (HL)
159+  8327 00 00        SCR_ATTR_PTR: 	db $00, $00				; Attr Pointer in Screen (2 bytes) (HL)
160+  8329 00           PRINT_ATTR:		db $00					; Attribute used by printchar routine (1 byte)
161+  832A
162+  832A              CHARSET: incbin "charset.bin"			; Charset used
163+  862A
# file closed: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\printat.asm
 18   862A                  INCLUDE fichas.asm
# file opened: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\fichas.asm
  1+  862A              TETROMINOS:                            ;
  2+  862A              ;---------------------------------------
  3+  862A              ;Tetromino O
  4+  862A 02 02 30 30  T_O: DB 2, 2, 6*8, 6*8, 6*8, 6*8, 0, 0
  4+  862E 30 30 00 00
  4+  8632 2A 86 2A 86    DW T_O, T_O
  5+  8636              ;Tetromino L
  6+  8636 03 02 20 00  T_L1: DB 3, 2, 4*8, 0, 4*8, 0, 4*8, 4*8
  6+  863A 20 00 20 20
  6+  863E 42 86 4E 86    DW T_L2, T_L3
  7+  8642 02 03 00 00  T_L2: DB 2, 3, 0, 0, 4*8, 4*8, 4*8, 4*8
  7+  8646 20 20 20 20
  7+  864A 5A 86 36 86    DW T_L4, T_L1
  8+  864E 03 02 20 20  T_L3: DB 3, 2, 4*8, 4*8, 4*8, 4*8, 0, 0
  8+  8652 20 20 00 00
  8+  8656 36 86 5A 86    DW T_L1, T_L4
  9+  865A 03 02 20 20  T_L4: DB 3, 2, 4*8, 4*8, 0, 4*8, 0, 4*8
  9+  865E 00 20 00 20
  9+  8662 42 86 4E 86    DW T_L2, T_L3
 10+  8666              ;Tetromino J
 11+  8666 03 02 00 10  T_J1: DB 3, 2, 0, 2*8, 0, 2*8, 2*8, 2*8
 11+  866A 00 10 10 10
 11+  866E 72 86 7E 86    DW T_J2, T_J3
 12+  8672 02 03 10 10  T_J2: DB 2, 3, 2*8, 2*8, 2*8, 0, 0, 2*8
 12+  8676 10 00 00 10
 12+  867A 8A 86 66 86    DW T_J4, T_J1
 13+  867E 02 03 10 00  T_J3: DB 2, 3, 2*8, 0, 0, 2*8, 2*8, 2*8
 13+  8682 00 10 10 10
 13+  8686 66 86 8A 86    DW T_J1, T_J4
 14+  868A 03 02 10 10  T_J4: DB 3, 2, 2*8, 2*8, 2*8, 0, 2*8, 0
 14+  868E 10 00 10 00
 14+  8692 72 86 7E 86    DW T_J2, T_J3
 15+  8696              ;Tetromino T
 16+  8696 02 03 28 28  T_T1: DB 2, 3, 5*8, 5*8, 5, 0, 5*8, 0
 16+  869A 05 00 28 00
 16+  869E A2 86 AE 86    DW T_T2, T_T3
 17+  86A2 03 02 28 00  T_T2: DB 3, 2, 5*8, 0, 5*8, 5*8, 5*8, 0
 17+  86A6 28 28 28 00
 17+  86AA BA 86 96 86    DW T_T4, T_T1
 18+  86AE 03 02 00 28  T_T3: DB 3, 2, 0, 5*8, 5*8, 5*8, 0, 5*8
 18+  86B2 28 28 00 28
 18+  86B6 96 86 BA 86    DW T_T1, T_T4
 19+  86BA 02 03 00 28  T_T4: DB 2, 3, 0, 5*8, 0, 5*8, 5*8, 5*8
 19+  86BE 00 28 28 28
 19+  86C2 AE 86 A2 86    DW T_T3, T_T2
 20+  86C6              ;Tetromino I
 21+  86C6 04 01 30 30  T_I1: DB 4, 1, 6*8, 6*8, 6*8, 6*8, 0, 0
 21+  86CA 30 30 00 00
 21+  86CE D2 86 D2 86    DW T_I2, T_I2
 22+  86D2 01 04 30 30  T_I2: DB 1, 4, 6*8, 6*8, 6*8, 6*8, 0, 0
 22+  86D6 30 30 00 00
 22+  86DA C6 86 C6 86    DW T_I1, T_I1
 23+  86DE              ;Tetromino Z
 24+  86DE 02 03 38 38  T_Z1: DB 2, 3, 7*8, 7*8, 0, 0, 7*8, 7*8
 24+  86E2 00 00 38 38
 24+  86E6 EA 86 EA 86    DW T_Z2, T_Z2
 25+  86EA 03 02 00 38  T_Z2: DB 3, 2, 0, 7*8, 7*8, 7*8, 7*8, 0
 25+  86EE 38 38 38 00
 25+  86F2 DE 86 DE 86    DW T_Z1, T_Z1
 26+  86F6              ;Tetromino S
 27+  86F6 02 03 00 18  T_S1: DB 2, 3, 0, 3*8, 3*8, 3*8, 3*8, 0
 27+  86FA 18 18 18 00
 27+  86FE 02 87 02 87    DW T_S2, T_S2
 28+  8702 03 02 18 00  T_S2: DB 3, 2, 3*8, 0, 3*8, 3*8, 0, 3*8
 28+  8706 18 18 00 18
 28+  870A F6 86 02 87    DW T_S1, T_S2
 29+  870E
 30+  870E 00 01 02 03  row_coords: DB 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
 30+  8712 04 05 06 07
 30+  8716 08 09 0A 0B
 30+  871A 0C 0D 0E 0F
 30+  871E 10 11 12 13
 30+  8722 14 15 16 17
# file closed: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\fichas.asm
 19   8726                  INCLUDE Tetris_3D.asm
# file opened: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\Tetris_3D.asm
  1+  8726 FF 81 81 85  Tetro_3D:   DB $FF, $81, $81, $85, $85, $9D, $81, $FF ; Patrón para los bloques
  1+  872A 85 9D 81 FF
  2+  872E
  3+  872E              Tetris_3D:
  4+  872E 16 03            LD D,3              ; Los 3 bloques de píxeles
  5+  8730 DD 21 00 40      LD IX,$4000         ; Dirección de comienzo de la VRAM
  6+  8734
  7+  8734              T3D3:
  8+  8734
  9+  8734 FD 21 26 87      LD IY,Tetro_3D      ; Primer byte del patrón
 10+  8738
 11+  8738 0E 08            LD C,8              ; 8 bytes del patrón
 12+  873A              T3D2:
 13+  873A 06 00            LD B,0              ; 256 bytes de cada línea del patrón
 14+  873C FD 7E 00         LD a,(IY)           ; Cargo el valor del patrón
 15+  873F              T3D1:
 16+  873F DD 77 00         LD (IX),a           ; Cargo el patrón en la VideoRam
 17+  8742 DD 23            INC IX              ; Siguientes 8 pixels
 18+  8744 10 F9            DJNZ T3D1           ; Fin del bucle
 19+  8746
 20+  8746 0D               DEC C               ; Fin del 2º Bucle
 21+  8747 FD 23            inc IY              ; Siguiente byte del patrón
 22+  8749 20 EF            JR NZ,T3D2
 23+  874B
 24+  874B 15               DEC D               ; Fin del 3º bucle
 25+  874C 20 E6            JR NZ, T3D3
 26+  874E
 27+  874E C9               RET
 28+  874F
# file closed: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\Tetris_3D.asm
# file closed: C:\Users\PC GAMING\Documents\Trabajos Uni\2º\Arquitectura\Tetris\main.asm
